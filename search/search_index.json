{
    "docs": [
        {
            "location": "/", 
            "text": "Cron\n\n\nA cron component which allows you to read and control cron tasks on remote systems.\n\n\nInstall\n\n\nRequire this package with composer using the following command:\n\n\n$ composer require plinker/cron\n\n\n\n\n\nClient\n\n\nCreating a client instance is done as follows:\n\n\n?php\n\n\nrequire\n \nvendor/autoload.php\n;\n\n\n\n/**\n\n\n * Initialize plinker client.\n\n\n *\n\n\n * @param string $server - URL to server listener.\n\n\n * @param string $config - server secret, and/or a additional component data\n\n\n */\n\n\n$client\n \n=\n \nnew\n \n\\Plinker\\Core\\Client\n(\n\n    \nhttp://example.com/server.php\n,\n\n    \n[\n\n        \nsecret\n \n=\n \na secret password\n,\n\n        \n// optional\n\n        \nconfig\n \n=\n \n[\n\n            \njournal\n \n=\n \n./.plinker/crontab.journal\n,\n\n            \napply\n   \n=\n \nfalse\n\n        \n]\n\n    \n]\n\n\n);\n\n\n\n// or using global function, with optional array\n\n\n$client\n \n=\n \nplinker_client\n(\nhttp://example.com/server.php\n,\n \na secret password\n,\n \n[\n\n    \nconfig\n \n=\n \n[\n\n        \njournal\n \n=\n \n./.plinker/crontab.journal\n,\n\n        \napply\n   \n=\n \nfalse\n\n    \n]\n\n\n]);\n\n\n\n\n\n\nComponent Config\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\njournal\n\n\nPath to journal file\n\n\n./.plinker/crontab.journal\n\n\n\n\n\n\napply\n\n\nApply crontab after each call, the default is to only apply upon calling the \napply()\n method\n\n\nfalse\n\n\n\n\n\n\n\n\nMethods\n\n\nOnce setup, you call the class though its namespace to its method.\n\n\nUser\n\n\nGet current user, helps to debug which user the crontab is owned by.\n\n\nCall\n\n\n$result = $client-\ncron-\nuser();\n\n\n\n\n\n\nResponse\n\n\nwww-data\n\n\n\n\n\nCrontab\n\n\nGet current crontab, equivalent to \ncrontab -l\n.\n\n\nCall\n\n\n$result = $client-\ncron-\ncrontab();\n\n\n\n\n\n\nResponse\n\n\n# My Cron Task\n0 * * * * cd ~\n# \\My Cron Task\n\n\n\n\n\nDump\n\n\nGet current crontab journal. The journal is a file which get built and then applied to the real crontab.\n\n\nCall\n\n\n$result = $client-\ncron-\ndump();\n\n\n\n\n\n\nResponse\n\n\n# My Cron Task\n0 * * * * cd ~\n# \\My Cron Task\n\n\n\n\n\nCreate\n\n\nCreate a crontask entry. Note one entry per key, multiple calls with same key would simply update.\n\n\nCall\n\n\n$result = $client-\ncron-\ncreate(\nMy Cron Task\n, \n* * * * * cd ~\n);\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nGet\n\n\nGet a crontask entry, also has an alias method read.\n\n\nCall\n\n\n$result = $client-\ncron-\nget(\nMy Cron Task\n);\n\n\n\n\n\n\nResponse\n\n\n0 * * * * cd ~\n\n\n\n\n\nUpdate\n\n\nUpdate cron task.\n\n\nCall\n\n\n$result = $client-\ncron-\nupdate(\nMy Cron Task\n, \n0 * * * * cd ~\n);\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nDelete\n\n\nDelete a cron task.\n\n\nCall\n\n\n$result = $client-\ncron-\ndelete(\nMy Cron Task\n);\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nDrop\n\n\nDrop cron task journal (delete all, but does not apply it).\n\n\nCall\n\n\n$result =  $client-\ncron-\ndrop();\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nApply\n\n\nApply crontab journal to users crontab.\n\n\nCall\n\n\n$result = $client-\ncron-\napply();\n\n\n\n\n\n\nResponse\n\n\n\n\n\n\n\n\nTesting\n\n\nThere are no tests setup for this component.\n\n\nContributing\n\n\nPlease see \nCONTRIBUTING\n for details.\n\n\nSecurity\n\n\nIf you discover any security related issues, please contact me via \nhttps://cherone.co.uk\n instead of using the issue tracker.\n\n\nCredits\n\n\n\n\nLawrence Cherone\n\n\nAll Contributors\n\n\n\n\nDevelopment Encouragement\n\n\nIf you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation \nhttps://www.paypal.me/lcherone\n, thanks.\n\n\nSponsors\n\n\nGet your company or name listed throughout the documentation and on each github repository, contact me at \nhttps://cherone.co.uk\n for further details.\n\n\nLicense\n\n\nThe MIT License (MIT). Please see \nLicense File\n for more information.\n\n\nSee the \norganisations page\n for additional components.", 
            "title": "Cron"
        }, 
        {
            "location": "/#cron", 
            "text": "A cron component which allows you to read and control cron tasks on remote systems.", 
            "title": "Cron"
        }, 
        {
            "location": "/#install", 
            "text": "Require this package with composer using the following command:  $ composer require plinker/cron", 
            "title": "Install"
        }, 
        {
            "location": "/#client", 
            "text": "Creating a client instance is done as follows:  ?php  require   vendor/autoload.php ;  /**   * Initialize plinker client.   *   * @param string $server - URL to server listener.   * @param string $config - server secret, and/or a additional component data   */  $client   =   new   \\Plinker\\Core\\Client ( \n     http://example.com/server.php , \n     [ \n         secret   =   a secret password , \n         // optional \n         config   =   [ \n             journal   =   ./.plinker/crontab.journal , \n             apply     =   false \n         ] \n     ]  );  // or using global function, with optional array  $client   =   plinker_client ( http://example.com/server.php ,   a secret password ,   [ \n     config   =   [ \n         journal   =   ./.plinker/crontab.journal , \n         apply     =   false \n     ]  ]);", 
            "title": "Client"
        }, 
        {
            "location": "/#component-config", 
            "text": "Parameter  Description  Default      journal  Path to journal file  ./.plinker/crontab.journal    apply  Apply crontab after each call, the default is to only apply upon calling the  apply()  method  false", 
            "title": "Component Config"
        }, 
        {
            "location": "/#methods", 
            "text": "Once setup, you call the class though its namespace to its method.", 
            "title": "Methods"
        }, 
        {
            "location": "/#user", 
            "text": "Get current user, helps to debug which user the crontab is owned by.  Call  $result = $client- cron- user();   Response  www-data", 
            "title": "User"
        }, 
        {
            "location": "/#crontab", 
            "text": "Get current crontab, equivalent to  crontab -l .  Call  $result = $client- cron- crontab();   Response  # My Cron Task\n0 * * * * cd ~\n# \\My Cron Task", 
            "title": "Crontab"
        }, 
        {
            "location": "/#dump", 
            "text": "Get current crontab journal. The journal is a file which get built and then applied to the real crontab.  Call  $result = $client- cron- dump();   Response  # My Cron Task\n0 * * * * cd ~\n# \\My Cron Task", 
            "title": "Dump"
        }, 
        {
            "location": "/#create", 
            "text": "Create a crontask entry. Note one entry per key, multiple calls with same key would simply update.  Call  $result = $client- cron- create( My Cron Task ,  * * * * * cd ~ );   Response", 
            "title": "Create"
        }, 
        {
            "location": "/#get", 
            "text": "Get a crontask entry, also has an alias method read.  Call  $result = $client- cron- get( My Cron Task );   Response  0 * * * * cd ~", 
            "title": "Get"
        }, 
        {
            "location": "/#update", 
            "text": "Update cron task.  Call  $result = $client- cron- update( My Cron Task ,  0 * * * * cd ~ );   Response", 
            "title": "Update"
        }, 
        {
            "location": "/#delete", 
            "text": "Delete a cron task.  Call  $result = $client- cron- delete( My Cron Task );   Response", 
            "title": "Delete"
        }, 
        {
            "location": "/#drop", 
            "text": "Drop cron task journal (delete all, but does not apply it).  Call  $result =  $client- cron- drop();   Response", 
            "title": "Drop"
        }, 
        {
            "location": "/#apply", 
            "text": "Apply crontab journal to users crontab.  Call  $result = $client- cron- apply();   Response", 
            "title": "Apply"
        }, 
        {
            "location": "/#testing", 
            "text": "There are no tests setup for this component.", 
            "title": "Testing"
        }, 
        {
            "location": "/#contributing", 
            "text": "Please see  CONTRIBUTING  for details.", 
            "title": "Contributing"
        }, 
        {
            "location": "/#security", 
            "text": "If you discover any security related issues, please contact me via  https://cherone.co.uk  instead of using the issue tracker.", 
            "title": "Security"
        }, 
        {
            "location": "/#credits", 
            "text": "Lawrence Cherone  All Contributors", 
            "title": "Credits"
        }, 
        {
            "location": "/#development-encouragement", 
            "text": "If you use this project and make money from it or want to show your appreciation,\nplease feel free to make a donation  https://www.paypal.me/lcherone , thanks.", 
            "title": "Development Encouragement"
        }, 
        {
            "location": "/#sponsors", 
            "text": "Get your company or name listed throughout the documentation and on each github repository, contact me at  https://cherone.co.uk  for further details.", 
            "title": "Sponsors"
        }, 
        {
            "location": "/#license", 
            "text": "The MIT License (MIT). Please see  License File  for more information.  See the  organisations page  for additional components.", 
            "title": "License"
        }
    ]
}